services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    env_file:
      - .env.${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - WDS_SOCKET_PORT=${PORT:-3001}
      - WATCHPACK_POLLING=true
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    volumes:
      - .:/app:delegated
      - /app/node_modules
    networks:
      - snap-dns-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "${BACKEND_PORT:-3002}:${BACKEND_PORT:-3002}"
    env_file:
      - backend/.env
      - backend/.env.${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=3002
      - TS_NODE_PROJECT=tsconfig.json
    volumes:
      - ./backend/src:/app/src:delegated
      - ./backend/tsconfig.json:/app/tsconfig.json:delegated
      - backend_node_modules:/app/node_modules
      - temp-keys:/tmp/snap-dns
    networks:
      - snap-dns-network
    cap_add:
      - NET_RAW
    command: npm run docker:dev

volumes:
  backend_node_modules:
  temp-keys:

networks:
  snap-dns-network:
    driver: bridge 